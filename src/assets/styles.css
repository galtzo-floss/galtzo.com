:root {
    --text-color: #111;
    --border-color: #eee;
    --background-light: #eee;
    /* Tag contrast tuning: outer pill (host) vs inner pill (label) and the left edge */
    --tag-outer-bg: var(--background-light);
    /* Make inner pill a touch closer to the control surface so it reads as a separate layer
       but still adapts to light/dark themes via --card-bg and --control-border. */
    --tag-inner-bg: color-mix(in oklab, var(--card-bg) 88%, var(--control-border) 12%);
    /* Strong left edge color for the inner pill (used as border-left) */
    --tag-inner-edge: color-mix(in oklab, var(--control-border) 75%, black 5%);

    /* Centralized orange variables (edit these to change orange across themes) */
    --orange-base: rgba(204, 74, 0, 0.8);      /* darker than previous rgba(255,100,0,0.8) */
    --orange-light-base: rgba(204, 74, 0, 0.4);
    --orange-solid-base: #cc4a00; /* darker than #e05500 (light-theme solid) */
    /* Two-tone orange border stops (top, bottom) derived from the active solid by default */
    --orange-top: color-mix(in oklab, var(--orange-solid) 20%, white);
    --orange-bottom: color-mix(in oklab, var(--orange-solid) 85%, black 10%);

    /* Dark-theme orange variants (used when dark visuals are active) */
    --orange-base-dark: rgba(184, 134, 0, 0.35); /* darker warm amber for dark theme */
    --orange-light-base-dark: rgba(184, 134, 0, 0.25);
    --orange-solid-dark: #b88600; /* darker than #e09b00 (dark-theme solid) */

    /* Active variables used throughout the stylesheet - these reference the chosen variant */
    --orange: var(--orange-base);
    --orange-light: var(--orange-light-base);
    --orange-solid: var(--orange-solid-base);
    /* Active state palette: default to the dark-mode orange variants so
       light-mode uses the same visual for active pills as dark mode. */
    --orange-active: var(--orange-base-dark);
    --orange-active-light: var(--orange-light-base-dark);
    --orange-active-solid: var(--orange-solid-dark);
    /* Two-tone stops for the active border (derived from active-solid) */
    --orange-top-active: color-mix(in oklab, var(--orange-active-solid) 20%, white);
    --orange-bottom-active: color-mix(in oklab, var(--orange-active-solid) 85%, black 10%);
    --white: white;
    --transparent: transparent;

    /* Role color palette: base solids + lighter glow variants */
    --author-solid: #dc2626; /* red */
    --author-color: color-mix(in oklab, var(--author-solid) 90%, white);

    --maintainer-solid: #16a34a; /* green */
    --maintainer-color: color-mix(in oklab, var(--maintainer-solid) 90%, white);

    --contributor-solid: #8b5cf6; /* purple */
    --contributor-color: color-mix(in oklab, var(--contributor-solid) 90%, white);

    --ribbon-length: 1200px;           /* long enough to cover the card diagonally */
    --corner-gap: 10px;                /* small padding so text isn’t flush with corner */
    --ribbon-stack-gap: 28px;          /* distance between the two ribbons along the diagonal */
    --ribbon-width: 720px;      /* length of each ribbon */
    --ribbon-top: 12px;         /* distance from top edge for the first ribbon */
    --ribbon-right: -332px;     /* center horizontally ~40px inside along diagonal */
    --ribbon-gap: 18px;         /* vertical gap between the two ribbons */
    /* Role-specific fine-tuning */
    --role-gap-extra: 9px;     /* extra separation from the fork banner */
    --role-right-adjust: 9px;   /* keep aligned horizontally with the fork banner */

    /* New: horizontal role bar height */
    --rolebar-height: 2.25rem; /* controls the height of the horizontal role bar */
    /* New: space reserved on the right under the fork ribbon so text doesn’t clash visually */
    --fork-notch: 3.5rem;

    /* Theme surfaces (light default) */
    --page-bg: #ffffff;
    --card-bg: #ffffff;
    --muted-bg: #f6f7f9;
    --control-bg: #f1f5f9;
    --control-hover-bg: #e2e8f0;
    --control-border: #cbd5e1;
    --control-text: #0f172a;
}

/* System default: dark mode variables */
@media (prefers-color-scheme: dark) {
    :root {
        --text-color: #e5e7eb;
        --border-color: #2a2f3a;
        --background-light: #1f2730;

        /* Wire dark visual system to the centralized dark orange variants */
        --orange: var(--orange-base-dark);
        --orange-light: var(--orange-light-base-dark);
        --orange-solid: var(--orange-solid-dark);
        /* In dark mode the active palette should follow the dark orange values */
        --orange-active: var(--orange);
        --orange-active-light: var(--orange-light);
        --orange-active-solid: var(--orange-solid);
        --orange-top-active: color-mix(in oklab, var(--orange-active-solid) 20%, white);
        --orange-bottom-active: color-mix(in oklab, var(--orange-active-solid) 85%, black 10%);

        --page-bg: #0b0f14;
        --card-bg: #111827;
        --muted-bg: #111827;
        --control-bg: #1f2937;
        --control-hover-bg: #374151;
        --control-border: #334155;
        --control-text: #e5e7eb;
    }
}

/* Forced overrides via attribute on <html> */
:root[data-theme="light"] {
    --text-color: #111;
    --border-color: #eee;
    --background-light: #eee;

    /* Explicit light theme maps back to the centralized light base values */
    --orange: var(--orange-base);
    --orange-light: var(--orange-light-base);
    --orange-solid: var(--orange-solid-base);
    /* Make active pills in light mode use the dark-mode active colors */
    --orange-active: var(--orange-base-dark);
    --orange-active-light: var(--orange-light-base-dark);
    --orange-active-solid: var(--orange-solid-dark);
    --orange-top-active: color-mix(in oklab, var(--orange-active-solid) 20%, white);
    --orange-bottom-active: color-mix(in oklab, var(--orange-active-solid) 85%, black 10%);

    --page-bg: #ffffff;
    --card-bg: #ffffff;
    --muted-bg: #f6f7f9;
    --control-bg: #f1f5f9;
    --control-hover-bg: #e2e8f0;
    --control-border: #cbd5e1;
    --control-text: #0f172a;
}

:root[data-theme="dark"] {
    --text-color: #e5e7eb;
    --border-color: #2a2f3a;
    --background-light: #1f2730;

    /* Explicit dark theme maps to the centralized dark base values */
    --orange: var(--orange-base-dark);
    --orange-light: var(--orange-light-base-dark);
    --orange-solid: var(--orange-solid-dark);
    /* Ensure active palette follows dark values as well */
    --orange-active: var(--orange);
    --orange-active-light: var(--orange-light);
    --orange-active-solid: var(--orange-solid);
    --orange-top-active: color-mix(in oklab, var(--orange-active-solid) 20%, white);
    --orange-bottom-active: color-mix(in oklab, var(--orange-active-solid) 85%, black 10%);

    --page-bg: #0b0f14;
    --card-bg: #111827;
    --muted-bg: #111827;
    --control-bg: #1f2937;
    --control-hover-bg: #374151;
    --control-border: #334155;
    --control-text: #e5e7eb;
}

body {
    font-family: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
    max-width: 48rem;
    margin: 2rem auto;
    padding: 0 1rem;
    color: var(--text-color);
    background: var(--page-bg);
}

header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 1rem;
}

.theme-toggle {
    appearance: none;
    background: var(--control-bg);
    color: var(--control-text);
    border: 1px solid var(--control-border);
    border-radius: 9999px;
    padding: 0.375rem 0.625rem;
    font-size: 0.9rem;
    line-height: 1;
    cursor: pointer;
    box-shadow: 0 0 8px var(--orange-light);
}
.theme-toggle:hover {
    background: var(--control-hover-bg);
}

h1 {
    border-bottom: 1px solid var(--border-color);
    padding-bottom: .25rem;
    display: flex;
    align-items: baseline;   /* keep pills aligned with the text baseline on wide screens */
    column-gap: 1rem;        /* space between title text and first pill */
    row-gap: 0.5rem;         /* vertical gap when pills wrap to the next line */
    flex-wrap: wrap;         /* allow pills to drop below the title when needed */
}

h2 {
    margin-top: 0.2rem;
    margin-bottom: 0.1rem;
}

li {
    margin: 0;
}

a.text-link {
    display: inline-block;
    text-decoration: underline;
    color: var(--orange-solid);
}

.link-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: 4px;
    text-decoration: none;
    color: inherit;
    font-size: 0.875rem;
    font-weight: 600;
    width: 20px;
    height: 20px;
    box-shadow: 0 0 10px var(--orange);
    background-color: var(--orange);
    padding: 0.3rem 0.5rem;
    margin-right: 0.5rem;
}

.min-language {
    .language {
        width: 14px;
        height: 14px;
        padding: 0.1rem 0.1rem;
        margin-right: 0.1rem;
        margin-bottom: -0.2rem;
        box-shadow: none;
        background-color: var(--transparent);
    }
}

a {
    text-decoration: none;
    color: inherit;
}

.project-list {
    display: flex;
    flex-wrap: wrap;
    gap: 0.7rem 1rem;
    list-style: none;
    padding: 0;
}

.card {
    width: 450px;
    box-sizing: border-box;
    border: 1px solid var(--border-color);
    padding: 1rem;
    /* Ensure content clears the horizontal role bar at the top */
    padding-top: calc(1rem + var(--rolebar-height));
    border-radius: 4px;
    position: relative;
    overflow: hidden;
    background: var(--card-bg);

    .tag {
        display: inline-block;
        /* inner pill sits visually above the host pill */
        background-color: var(--tag-inner-bg);
        border-radius: 9999px;
        padding: 0.3rem 0.75rem;
        font-size: 0.75rem;
        font-weight: 600;
        margin: -0.1rem 0.5rem 0 0;
        /* subtle glow and a thin left edge to separate from the outer pill */
        box-shadow: 0 0 8px rgba(0,0,0,0.04), 0 0 10px var(--orange-light);
        border-left: 3px solid var(--tag-inner-edge);
    }
    .tag.author {
        box-shadow: 0 0 10px var(--author-color);
    }

    .tag.maintainer {
        box-shadow: 0 0 10px var(--maintainer-color);
    }

    .tag.contributor {
        box-shadow: 0 0 10px var(--contributor-color);
    }
}

/* Project card positioning for corner banners */
.card {
    position: relative;
    overflow: hidden;
}

/* Absolute + rotate recipe anchored to the card */
.card .corner-banner {
    position: absolute;
    width: var(--ribbon-width);
    padding: 9px 0;
    text-align: center;
    font-weight: 700;
    font-size: 14px;
    color: #fff;
    text-decoration: none;
    transform: rotate(45deg);
    transform-origin: 50% 50%;
    white-space: nowrap;
    box-shadow: 0 2px 4px rgba(0,0,0,0.3);
    z-index: 10;
    /* Center content precisely */
    display: flex;
    align-items: center;
    justify-content: center;
    line-height: 1;
}

/* Fork/Clone (closest to corner) */
.card .banner-fork {
    top: var(--ribbon-top);
    right: var(--ribbon-right);
    background: linear-gradient(135deg, #1e5799 0%, #2989d8 50%, #207cca 100%);
    z-index: 11;
}

/* Role banner: convert to a full-width horizontal bar across the top of the card */
.card .banner-role {
    /* override ribbon defaults */
    transform: none;
    transform-origin: initial;
    white-space: normal;

    /* full-width bar at top */
    top: 0;
    left: 0;
    right: 0;
    width: 100%;
    height: var(--rolebar-height);
    /* extra right padding to avoid fork ribbon overlap visually */
    padding: 0 calc(0.75rem + var(--fork-notch)) 0 0.75rem;

    /* reset size from ribbon values */
    font-size: 0.9rem;
    line-height: var(--rolebar-height);

    /* layout contents: label left, since-year right */
    justify-content: space-between;

    /* layering: must sit under the fork ribbon on the right */
    z-index: 10;

    /* shape to match card corners */
    border-top-left-radius: 4px;
    border-top-right-radius: 4px;
}

/* Role bar content styles */
.card .banner-role .role-label,
.card .banner-role .role-start {
    display: inline-flex;
    align-items: center;
    line-height: 1;
}
.card .banner-role a {
    color: inherit; /* uses white from corner-banner */
    text-decoration: none;
}
.card .banner-role a:hover {
    text-decoration: underline;
}

/* New: subtle role tint for the horizontal bar. Use small color mixes
   so the tint is visible but not overpowering; keep text contrast
   by letting links inherit the computed color. */
.card.author.banner-role,
.card.author .banner-role {
    /* very subtle tint from the author solid color mixed with card background */
    background: color-mix(in oklab, var(--author-solid) 8%, var(--card-bg));
    /* soft inner glow on the bar's lower edge using the role color */
    box-shadow: inset 0 -6px 12px -8px var(--author-color);
    color: var(--text-color);
}

.card.maintainer.banner-role,
.card.maintainer .banner-role {
    background: color-mix(in oklab, var(--maintainer-solid) 8%, var(--card-bg));
    box-shadow: inset 0 -6px 12px -8px var(--maintainer-color);
    color: var(--text-color);
}

.card.contributor.banner-role,
.card.contributor .banner-role {
    background: color-mix(in oklab, var(--contributor-solid) 8%, var(--card-bg));
    box-shadow: inset 0 -6px 12px -8px var(--contributor-color);
    color: var(--text-color);
}

/* Small left accent stripe to reinforce the role color on wider screens */
.card .banner-role::before {
    content: "";
    position: absolute;
    left: 0.25rem;
    top: 0.375rem;
    bottom: 0.375rem;
    width: 6px;
    border-radius: 3px;
    /* default transparent; role-specific rules below will override */
    background: transparent;
    z-index: 11; /* sit above the bar but below the fork ribbon */
}

.card.author .banner-role::before {
    background: var(--author-solid);
    opacity: 0.12;
}
.card.maintainer .banner-role::before {
    background: var(--maintainer-solid);
    opacity: 0.12;
}
.card.contributor .banner-role::before {
    background: var(--contributor-solid);
    opacity: 0.12;
}

/* Hide cartain tags inside project cards but keep them in the DOM for filtering.
   This uses an "sr-only" / visually-hidden pattern so JS and assistive tech can
   still access the text if needed. Can be added to any tag to hide it visually while
   keeping it available to scripts. Use on .tag elements: <span class="tag foo filter-hidden"> */
.tag.filter-hidden {
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
    padding: 0 !important;
    margin: -1px !important;
    overflow: hidden !important;
    clip: rect(0 0 0 0) !important;
    clip-path: inset(50%) !important;
    white-space: nowrap !important;
    border: 0 !important;
}

.author {
    box-shadow: 0 0 10px var(--author-color);
}

.maintainer {
    box-shadow: 0 0 10px var(--maintainer-color);
}

.contributor {
    box-shadow: 0 0 10px var(--contributor-color);
}

.projects {
    max-width: none;
}

/* Ensure pills don’t use any upward shift by default (helps small viewports) */
h1 .tag-list {
    transform: none;
    margin-left: 0;
}

/* Remove mobile-specific overrides no longer needed due to flex wrapping */
/* (intentionally left blank to avoid conflicting rules) */

.tag-list {
    display: inline-flex;
    flex-wrap: wrap;
    gap: 1.1rem 0.8rem;
    list-style: none;
    padding: 0;

    > * {
        margin: 0;
    }

    .tag {
        display: inline-block;
        background-color: var(--tag-inner-bg);
        border-radius: 9999px;
        padding: 0.3rem 1rem 0.3rem 1.75rem;
        font-size: 0.75rem;
        font-weight: 600;
        margin-left: 1.5rem;
        margin-right: 0;
        border: 2px solid var(--transparent);
        /* keep the outer orange glow but make inner subtle to distinguish layers */
        box-shadow: 0 0 8px rgba(0,0,0,0.04), 0 0 10px var(--orange-light);
        transition: margin-left 0.3s ease;
    }

    .tag.author {
        box-shadow: 0 0 10px var(--author-color);
    }

    .tag.maintainer {
        box-shadow: 0 0 10px var(--maintainer-color);
    }

    .tag.contributor {
        box-shadow: 0 0 10px var(--contributor-color);
    }

    .tag-link {
        display: inline-block;
        background-color: var(--tag-outer-bg);
        border-radius: 9999px;
        /*padding: 0.3rem 1rem 0.3rem 1.75rem;*/
        box-shadow: 0 0 10px var(--orange-light);
        text-decoration: none;
        color: inherit;
        /*margin: 0 0.5rem 0 0;*/
        position: relative;

        /* Let the browser handle vertical panning natively: improves
           touch gesture detection and prevents accidental taps during
           vertical scroll. This is intentionally set on the source CSS
           only; do not modify generated files. */
        touch-action: pan-y;

        /* two-tone border using layered backgrounds and background-clip */
        border: 2px solid transparent; /* keep a physical border width for layout */
        background-image: linear-gradient(var(--tag-outer-bg), var(--tag-outer-bg)), linear-gradient(to bottom, var(--orange-top), var(--orange-bottom));
        background-origin: border-box;
        background-clip: padding-box, border-box;
    }

    /* When active, inner background is orange while border remains two-tone orange */
    .tag-link.active {
        background-image: linear-gradient(var(--orange-active), var(--orange-active)), linear-gradient(to bottom, var(--orange-top-active), var(--orange-bottom-active));
    }

    /* Make decorative summary controls show a pointer so they feel clickable
       while remaining non-interactive elements that let summary handle the
       native toggle behavior. */
    .summary-control {
        cursor: pointer;
    }

    /* Summary / Details: show summary contents in a single horizontal row, with
       the expanded details panel appearing below the same row when open. */
    details {
        display: block;
        margin: 0;
        /* Ensure summary allows child glows/shadows to show outside its box */
        overflow: visible;
    }

    /* Base summary reset so we can control layout precisely */
    details > summary {
        list-style: none; /* remove marker spacing */
        cursor: pointer;
        padding: 0;
        margin: 0;
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        gap: 0;
        /* Ensure summary allows child glows/shadows to show outside its box */
        overflow: visible;
    }

    /* Hide the default disclosure triangle across browsers */
    details > summary::-webkit-details-marker,
    details > summary::marker {
        display: none;
    }

    /* Force the tag-list inside the summary to be a single non-wrapping row */
    details > summary .tag-list {
        display: flex;
        flex-wrap: nowrap;        /* keep items in a single row */
        gap: 0.6rem 0.9rem;
        align-items: center;
        /* Allow overflow so box-shadows and glows aren't clipped by a scroll container's rectangle */
        overflow: visible;
        padding: 0;
        margin: 0;
    }

    /* Inner scroll wrapper: enables horizontal scrolling when needed while providing
       vertical padding to prevent glows from being clipped by the scroller's box. */
    details > summary .tag-list .tag-scroll {
        display: flex;
        gap: 0.6rem 0.9rem;
        align-items: center;
        flex-wrap: nowrap;        /* keep items in a single row inside the scroller */
        overflow-x: auto;        /* allow horizontal scrolling on small viewports */
        overflow-y: visible;     /* try to avoid vertical clipping where possible */
        -webkit-overflow-scrolling: touch;
        /* Increased vertical padding so box-shadow / glow has room to render outside
           the tag content without being clipped by the scroller's rectangle. Also
           add horizontal padding so tag shadows don't overflow the scroller's left/right edges. */
        padding: 0.75rem 0.9rem;      /* vertical 0.75rem, horizontal 0.9rem */
        margin: 0;
    }

    /* When the details are expanded, present the following tag-list as a
       full-width panel below the summary row */
    details > .tag-list {
        margin-top: 0.6rem;
        display: flex;
        flex-wrap: wrap;
        gap: 0.7rem 1rem;
        list-style: none;
        padding: 0;
    }

    /* Small caret indicator on the summary-control (keeps the DOM semantics) */
    details > summary .summary-control {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

    details > summary .summary-control::after {
        content: "";
        display: inline-block;
        width: 0;
        height: 0;
        border-left: 6px solid transparent;
        border-right: 6px solid transparent;
        border-top: 6px solid currentColor;
        transition: transform 0.18s ease;
        margin-left: 0.25rem;
    }

    /* Rotate caret when open */
    details[open] > summary .summary-control::after {
        transform: rotate(180deg);
    }

    .tag-link.author {
        box-shadow: 0 0 10px var(--author-color);
    }

    .tag-link.maintainer {
        box-shadow: 0 0 10px var(--maintainer-color);
    }

    .tag-link.contributor {
        box-shadow: 0 0 10px var(--contributor-color);
    }

    .tag-link.active {
        background-color: var(--orange-active);
    }

    .tag-link.author.active {
        background-color: var(--author-color);
    }

    .tag-link.maintainer.active {
        background-color: var(--maintainer-color);
    }

    .tag-link.contributor.active {
        background-color: var(--contributor-color);
    }

    .tag-link.active .tag {
        background-color: var(--orange-active);
        color: var(--white);
        border: 2px solid var(--orange-active-solid);
        margin-left: 0;
        margin-right: 1.5rem;
    }

    .tag-link.author.active .tag.author {
        background-color: var(--author-color);
        color: var(--white);
        border: 2px solid var(--author-solid);
        margin-left: 0;
        margin-right: 1.5rem;
    }

    .tag-link.maintainer.active .tag.maintainer {
        background-color: var(--maintainer-color);
        color: var(--white);
        border: 2px solid var(--maintainer-solid);
        margin-left: 0;
        margin-right: 1.5rem;
    }

    .tag-link.contributor.active .tag.contributor {
        background-color: var(--contributor-color);
        color: var(--white);
        border: 2px solid var(--contributor-solid);
        margin-left: 0;
        margin-right: 1.5rem;
    }

    .count {
        position: absolute;
        top: 0.5rem;
        font-size: 0.75rem;
        font-weight: 600;
        padding: 0 0.5rem;
        color: var(--text-color);
    }

    .count.left {
        left: 0;
        opacity: 1;
        z-index: 1;
    }

    .count.right {
        right: 0;
        opacity: 1;
        z-index: -1;
    }

    .tag-link.active .count.left {
        opacity: 0;
        z-index: -1;
    }

    .tag-link.active .count.right {
        opacity: 1;
        color: var(--white);
        z-index: 1;
    }
}

/* Filters container: lay out the details summaries in a single horizontal row */
.filters {
    position: relative; /* positioning context for absolute panels */
    display: flex;
    gap: 0.75rem;
    align-items: flex-start;
    justify-content: flex-start;
    /* keep filters visually grouped from surrounding content */
    margin-bottom: 0.75rem;
    overflow: visible; /* ensure overlays and shadows are visible */
    /* Allow the filters row to wrap to multiple lines on narrow viewports so it
       doesn't push the page horizontally. This mirrors the behavior used in the
       h1 role filters and improves mobile UX. */
    flex-wrap: wrap;
}

/* Each <details> becomes a compact flex item so its <summary> sits inline in the row */
.filters > details {
    /* size to content, allow shrinking so long summaries won't force overflow */
    flex: 0 1 auto;
    min-width: 0; /* enable flex children to shrink properly */
    position: relative; /* positioning context for its absolutely-positioned panel */
}

/* Small tweak: allow the summary's inline tag-list to wrap if the available
   width is very small. By default we keep horizontal scrolling, but allow a
   fallback to wrap on extremely narrow screens. */
.filters > details > summary .tag-list {
    display: flex;
    flex-wrap: wrap;
    gap: 0.6rem 0.9rem;
    align-items: center;
    padding: 0;
    margin: 0;
    overflow-x: visible;        /* remove horizontal scrolling to allow wrapping */
    overflow-y: visible;         /* ensure vertical overflow (e.g. box-shadow) isn't clipped */
    -webkit-overflow-scrolling: touch;
}

/* Panels: position as overlays so opening them won't push content down */
.filters > details > .tag-list {
    position: absolute; /* overlay other content */
    top: calc(100% + 0.6rem);
    left: 0;
    /* responsive width: never wider than the page column but allow space for multiple columns */
    width: min(48rem, calc(100vw - 2rem));
    background: var(--muted-bg);
    border-radius: 8px;
    box-shadow: 0 10px 30px rgba(0,0,0,0.12);
    z-index: 60; /* sit above page content */

    /* Use a responsive grid so several tags can sit on a row */
    display: grid; /* changed from flex to grid */
    grid-template-columns: repeat(auto-fit, minmax(9rem, 1fr));
    column-gap: 1rem;
    row-gap: 0.7rem;
    list-style: none;
    padding: 0.6rem; /* consistent internal padding */
    box-sizing: border-box;

    /* viewport-safe: don't exceed 60% of viewport height; allow internal scrolling */
    max-height: 60vh;
    overflow: auto; /* allow internal scrolling when needed */
    -webkit-overflow-scrolling: touch;
    overscroll-behavior: contain;
}

/* Right-aligned variant: used when JS decides panel would overflow the right edge */
.filters > details.align-right > .tag-list {
    left: auto;
    right: 0;
}

/* Show overlay when the details element is open */
.filters > details[open] > .tag-list {
    display: grid;
}

/* On very small viewports, reduce the min column width so at least two columns can fit */
@media (max-width: 36rem) {
    .filters > details > .tag-list {
        grid-template-columns: repeat(auto-fit, minmax(7.5rem, 1fr));
    }
}

/* Ensure the decorative summary-control caret and spacing remain as before */
.filters > details > summary .summary-control {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
}

/* When any tag inside a details is active, give the summary-control the same
   'active' treatment so it reads like the filter pills. The JS toggles
   `has-active-filter` on the <details>. */
.filters > details.has-active-filter > summary .summary-control {
    /* Match the active pill visuals driven by the --orange-active variables */
    display: inline-flex; /* ensure same layout as .tag-link */
    align-items: center;
    gap: 0.5rem;
    /* Remove outer padding — let the inner .tag provide the vertical sizing so
       the summary-control doesn't change the row height when toggled. */
    padding: 0;
    box-sizing: border-box;
    border-radius: 9999px;
    color: var(--white);
    text-decoration: none;
    vertical-align: middle;
    /* two-tone border + inner background like .tag-link.active */
    border: 2px solid transparent;
    background-image: linear-gradient(var(--orange-active), var(--orange-active)), linear-gradient(to bottom, var(--orange-top-active), var(--orange-bottom-active));
    background-origin: border-box;
    background-clip: padding-box, border-box;
    /* previously used a glow here which caused square cutoff issues; remove it */
    box-shadow: none;
}

/* Make the inner .tag behave exactly like the .tag inside a .tag-link.active */
.filters > details.has-active-filter > summary .summary-control .tag {
    background-color: var(--orange-active);
    color: var(--white);
    border: 2px solid var(--orange-active-solid);
    margin-left: 0;          /* slide left into the host pill */
    margin-right: 1.5rem;    /* same spacing as active tags */
    /* ensure the same transition exists so it animates like the real tag */
    transition: margin-left 0.3s ease, background-color 150ms linear, border-color 150ms linear;
    /* Match the inner padding used by regular .tag so sizing is consistent */
    padding: 0.3rem 1rem 0.3rem 1.75rem;
    border-radius: 9999px;
}

/* Counts should swap like on .tag-link.active */
.filters > details.has-active-filter > summary .summary-control .count.left {
    opacity: 0;
    z-index: -1;
}
.filters > details.has-active-filter > summary .summary-control .count.right {
    opacity: 1;
    color: var(--white);
    z-index: 1;
}

/* Ensure caret color follows the summary-control color (often white on active) */
.filters > details.has-active-filter > summary .summary-control::after {
    border-top-color: currentColor;
}

/* Remove focus treatment on summary controls to avoid square/cornered rings that
   can be clipped by scrollers. This intentionally clears both outline and box-shadow
   for focused summary elements (active and non-active). */
.filters > details > summary:focus,
.filters > details > summary:focus-visible {
    outline: none;
    box-shadow: none;
}

/* Also ensure any focus rules targeting the active summary-control don't add a
   glow — keep active visuals but remove focus-generated box-shadow. */
.filters > details.has-active-filter > summary:focus-visible .summary-control,
.filters > details.has-active-filter > summary:focus .summary-control {
    outline: none;
    box-shadow: none;
}

/* Remove any remaining glows inside non-active summary rows. We target the
   common selector shapes used for tags and tag-links that can appear in the
   summary row (including the scroll wrapper). Use !important to ensure these
   overrides take precedence and prevent clipped corner glows. */
.filters > details > summary .tag,
.filters > details > summary .tag-list .tag,
.filters > details > summary .tag-list .tag-scroll .tag,
.filters > details > summary .tag-scroll .tag,
.filters > details > summary .tag-link,
.filters > details > summary .tag-link .tag,
.filters > details > summary .summary-control .tag {
    box-shadow: none !important;
}

/* Very broad override: remove any box-shadow on any element or pseudo-element
   inside non-active summary rows. This is intentionally aggressive but scoped
   to `.filters > details > summary` so it only affects the horizontal filter
   control row. It ensures no glows will be visible or clipped in the summary. */
.filters > details > summary,
.filters > details > summary *,
.filters > details > summary *::before,
.filters > details > summary *::after {
    box-shadow: none !important;
}
